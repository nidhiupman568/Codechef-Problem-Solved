#include <bits/stdc++.h>
using namespace std;
const int mod=1e9+7;
using ll = long long;


void fastio() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
}

ll pow(ll a, ll b, ll m = mod) {
    a %= m;
    ll res = 1;
    while (b > 0) {
        if (b & 1) res = res * a % m;
        a = a * a % m;
        b >>= 1;
    }
    return res;
}

const ll N = 2e6+10;
ll fact[N], inv[N];

ll ncr(ll n, ll r) {
    if (r > n || n < 0 || r < 0) return 0;
    return fact[n] * inv[n-r] % mod * inv[r] % mod;
}

void init_ncr() {
    fact[0] = 1;
    for (ll i = 1; i < N; i++) {
        fact[i] = i * fact[i-1] % mod;
    }
    inv[N-1] = pow(fact[N-1], mod-2, mod);
    for (ll i = N-2; i >= 0; i--) {
        inv[i] = inv[i+1] * (i+1) % mod;
    }
}
long long solve(long long n){
    if(n<4){
        return 0;
    }
    if(n==4){
        return 1;
    }
     ll ans = ncr(2*n-1, n-1);
    if (n > 3 && (n & 1)) ans = (ans - 1 + mod) % mod;
    for (ll k = 0; k <= 3 && k <= n; k++) {
        ans = (ans - ncr(n, k) * ncr(n-1, k-1) % mod + mod) % mod;
    }
   return ans;
    
    
}


int main() {
	// your code goes here
	fastio();
    init_ncr();
	int n;
	cin>>n;
	while(n--){
	    long long a;
	    cin>>a;
	    
	    cout<<solve(a)<<endl;
	    
	}
return 0;
}
