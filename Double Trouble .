#include <bits/stdc++.h>
using namespace std;
#define int long long
int modPow(int x,int y,int p) {
    int res = 1;
    x = x % p;
    while (y > 0) {
        if (y & 1) res = (res * x) % p;
        y = y >> 1;
        x = (x * x) % p;
    }
    return res;
}
signed main() {
	int t;
	int M = 1e9 + 7;
	cin>>t;
	while(t--){
	    int n,k;
	    cin>>n>>k;
	    int arr[n];
	    int fnop = k;
	    for(int i=0;i<n;i++){
	        cin>>arr[i];
	    }
	    sort(arr,arr+n);
	    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
	    int j=0;
	    for(auto i:arr){
	        pq.push({i,j});
	        j++;
	    }
	    int idxtill = 0;
	    while(k>0 && idxtill < n-1){
	        pair<int,int>p = pq.top();
	        pq.pop();
	        idxtill = max(idxtill,p.second);
	        int num = p.first*2;
	        pq.push({num,p.second});
	        k--;
	    }
	    int remops = k;
	    vector<int>v;
	    while(!pq.empty()){
	        pair<int,int>p = pq.top();
	        pq.pop();
	        v.push_back(p.first);
	    }
	    sort(v.begin(),v.end());
	    int dist = k/n;
	    int rem = k%n;
	    for(int i=0;i<v.size();i++){
	        int num = v[i]%M;
	        int mul = modPow(2,dist,M);
	        v[i] = (num*mul)%M;
	    }
	    for(int i=0;i<rem;i++){
	        int num = v[i]%M;
	        int mul = 2;
	        v[i] = (num*mul)%M;
	    }
	    int ans = 0;
	    for(int i=0;i<n;i++){
	        ans = (ans + v[i])%M;
	    }
	    cout<<ans<<endl;
	}

}
