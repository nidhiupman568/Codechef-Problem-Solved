#include <bits/stdc++.h>
using namespace std;

const int mod = 1e9 + 7;

int f2[200009];
void myadd(int &a, int b) {
    a += b;
    if (a >= mod) a-=mod;
}
int main() {
	// your code goes here
	f2[0]=1;
	for (int i = 1; i <= 200000;++i) {
	    f2[i] = f2[i - 1] * 2 % mod;
	}
    int t;
    scanf("%d",&t);
    while (t--) {
        int n, k;
        scanf("%d%d",&n,&k);
        vector<int> a(n), b(n);
        int bit = 0;
        while ((1<<bit)-1 <= k) ++bit;
        vector<int> s(1<<bit, 0), o(1<<bit, 0);
        for (int i = 0; i < n; ++i) {
            scanf("%d",&a[i]);
        }
        for (int i = 0; i < n; ++i) {
            scanf("%d",&b[i]);
            myadd(s[a[i]], b[i]);
            ++o[a[i]];
        }
        for (int i = 0; i < bit; ++i) {
            for (int j = 1; j < (1<<bit); ++j) {
                if (j & (1<<i)) {
                    myadd(s[j], s[j^(1<<i)]);
                    myadd(o[j], o[j^(1<<i)]);
                }
            }
        }
        for (int i = 1; i < (1<<bit); ++i) {
            if (o[i]) s[i] = 1LL * s[i] * f2[o[i] - 1] % mod;
            else s[i] = 0;
        }
        for (int i = 0; i < bit; ++i) {
            for (int j = 1; j < (1<<bit); ++j) {
                if (j & (1<<i)) {
                    myadd(s[j], mod - s[j^(1<<i)]);
                }
            }
        }
        int sum = 0;
        for (int i = 1; i <= k; ++i) {
            myadd(sum, s[i]);
            printf("%d%c", sum, " \n"[i == k]);
        }
    }
}
