//Shortcuts

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
typedef long long int ll;
typedef pair<int,int> pi;
typedef pair<ll,ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
#define pb push_back
#define fi first
#define se second
#define endl "\n"
#define all(x) x.begin(),x.end()
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

//Macros
#ifndef ONLINE_JUDGE
#include "debug.h"
#define debug(x...) cerr << "[" << #x << "] = ["; _print(x)
#else
#define debug(x...)
#endif

//IO functions

void inp(vi& a)
{
    for(int i = 0; i < a.size(); i++)
        cin >> a[i];
}

void inp(vll& a)
{
    for(int i = 0; i < a.size(); i++)
        cin >> a[i];
}

ostream& operator << (ostream& s, pi& a)
{
    return s << a.fi << " " << a.se;
}

ostream& operator << (ostream& s, pll& a)
{
    return s << a.fi << " " << a.se;
}

ostream& operator << (ostream& s, vi& a)
{
    for(int i : a)
        s << i << " ";
    return s;
}

ostream& operator << (ostream& s, vll& a)
{
    for(ll i : a)
        s << i << " ";
    return s;
}

void yes(bool b)
{
    if(b)
        cout << "Yes" << endl;
    else
        cout << "No" << endl;
}

//EXTRA FUNCTIONS*******************************************************

//END OF EXTRA FUNCTIONS************************************************

//Write code here

void run(int test)
{
    int n, v; cin >> n >> v;
    int ma = 40000*n;
    vll dp1(ma, -1e18), dp2(ma, 1e18);
    dp1[0] = 0;
    dp2[0] = 0;
    for(int i = 0; i < n; i++)
    {
        int x, y; cin >> x >> y;
        if(x < y)
        {
            for(int j = ma-1; j >= x; j--)
                dp1[j] = max(dp1[j-x] + y, dp1[j]);
        }
        else
        {
            for(int j = ma-1; j >= y; j--)
                dp2[j] = min(dp2[j-y] + x, dp2[j]);
        }
    }
    for(int i = 1; i < ma; i++)
        dp1[i] = max(dp1[i], dp1[i-1]);
    ll ans = 0;
    for(int i = 0; i < ma; i++)
    {
        ll rem = (ll)v - dp2[i];
        if(rem >= 0)
        {
            rem = min(rem, (ll)(ma-1));
            ans = max(ans, i+dp1[rem]);
        }
    }
    cout << ans << endl;
}


//Main function

int main()
{
    //Fast IO
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t = 1; 
    cin >> t;
    for(int i = 1; i <= t; i++)
        run(i);
    return 0;
}
