#include<iostream>
#include<vector>
#include<unordered_map>
using namespace std;
typedef long long ll;
const int N = 2e5 + 10, mod = 1e9 + 7;
int a[N];
bool is_prime(int x)
{
    for(int i = 2; i <= x / i; i ++ )
        if(x % i == 0) return false;
    return true;
}

ll qmi(int a, int b, int p)
{
    ll res = 1;
    while(b)
    {
        if(b & 1) res = res * a % p;
        b >>= 1;
        a = (ll)a * a % p;
    }
    return res;
}

int main()
{
    cin.tie(0), cout.tie(0), ios::sync_with_stdio(false);
    
    int t;
    cin >> t;
    while(t -- )
    {
        unordered_map<int, int> c;
        int n, k;
        cin >> n >> k;
        vector<int> p;
        for(int i = 2; i <= k; i ++ )
            if(is_prime(i)) p.push_back(i);
        int m = p.size();
        for(int i = 1; i <= n; i ++ ) cin >> a[i];
        if(!is_prime(k))
        {
            cout << 0 << endl;
            continue;
        }
        for(int i = 1; i <= n; i ++ )
        {
            int u = 1;
            vector<int> w;
            if(a[i] % k != 0) continue;
            for(int j = 0; j < m - 1; j ++ )
            {
                if(a[i] % p[j] == 0) u ++ , w.push_back(p[j]);
            }
            w.push_back(k);

            for(int q = 1; q < (1 << u); q ++ )
            {
                int t = 1;
                for(int l = 0; l < u; l ++ )
                    if(q >> l & 1)
                        t *= w[l];
                c[t] ++ ;
            }
        }
            
        ll res = 0;
        for(int i = 0; i < 1 << (m - 1); i ++ )
        {
            int t = 1, s = 1;
            for(int j = 0; j < m - 1; j ++ )
            {
                if(i >> j & 1)
                {
                    t *= p[j];
                    s ++ ;
                }
            }
            t *= k;

            if(s % 2) res = (res + qmi(2, c[t], mod) - 1) % mod;
            else res = (res - qmi(2, c[t], mod) + 1 + mod) % mod;
        }
        cout << res << endl;
    }

    return 0;
}
