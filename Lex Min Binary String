#include <bits/stdc++.h>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define per(i,n) for(int i=n-1;i>=0;i--)
#define rng(i,c,n) for(int i=c;i<n;i++)
#define fi first
#define se second
#define pb push_back
#define sz(a) (int) a.size()
#define all(a) a.begin(),a.end()
#define vec(...) vector<__VA_ARGS__>
#define _3Wcdivh ios::sync_with_stdio(0),cin.tie(0)
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pii;
void print(){cout<<'\n';}
template<class h,class...t>
void print(const h&v,const t&...u){cout<<v<<' ',print(u...);}

void slv(){
	int n;
	cin>>n;

	string s;
	cin>>s;

	// print("~ ~",sz(s));

	if(count(all(s),'1')==count(all(s),'0')){
		cout<<"EMPTY\n";
		return;
	}

	vi sf(n);
	per(i,n){
		if(i+1<n){
			sf[i]=sf[i+1];
		}
		sf[i]+=(s[i]=='0'?1:-1);
	}

	vi ps(n);
	rep(i,n){
		if(i){
			ps[i]=ps[i-1];
		}
		ps[i]+=(s[i]=='0'?1:-1);
	}

	vi nxt(n);
	set<pii> st;
	per(i,n){
		while(sz(st)){
			auto it=st.begin();
			pii p=*it;
			if(ps[i]>p.fi){
				st.erase(it);
			}else{
				break;
			}
		}
		nxt[i]=-1;
		auto it=st.lower_bound({ps[i]+1,-1});
		if(it!=st.end()){
			nxt[i]=(*it).se;
		}
		st.insert({ps[i],i});
	}

	string pns="";
	int i=-1;
	while(i<n){
		// if there exists ps[j] - ps[i - 1] > 0
		// write 0
		// else 
		if(i==n-1 or sf[i+1]==0){
			break;
		}
		if(i==-1){
			bool fnd=0;
			rep(j,n){
				if(ps[j]>0){
					fnd=1;
					pns+="0";
					i=j;
					break;
				}
			}
			if(!fnd){
				pns+="1";
				i+=1;
			}
		}else{
			if(nxt[i]!=-1){
				pns+="0";
				i=nxt[i];
			}else{
				pns+="1";
				i+=1;
			}
		}
	}
	cout<<pns<<"\n";
}

signed main(){
_3Wcdivh;
	int __t;
	cin>>__t;
	rep(cs,__t){
		slv();
	}
}
