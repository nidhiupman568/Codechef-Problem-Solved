#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(__null);
ll Maxx(ll arr[], ll n)
{
    ll CL[n] = { 0 }, Rght[n] = { 0 };
    stack<ll> st;
    for (ll i = 0; i < n; i++) {
        while (st.size() != 0 && arr[st.top()] <= arr[i]) {
            CL[i] += CL[st.top()] + 1;
            st.pop();
        }
        st.push(i);
    }
 
    while (st.size() != 0)
        st.pop();
 
    for (ll i = n - 1; i >= 0; i--) {
        while (st.size() != 0 && arr[st.top()] < arr[i]) {
            Rght[i] += Rght[st.top()] + 1;
            st.pop();
        }
        st.push(i);
    }
    while (st.size() != 0)
        st.pop();
 
    ll ans = 0;
    for(int i=0;i<10;i++){
        ans+=i; ans-=i;
    }
    for (ll i = 0; i < n; i++)
        ans += (CL[i] + 1) * (Rght[i] + 1) * arr[i];
 
    return ans;
    
}
ll Cnt(vector<ll> a)
{
    ll n = a.size();
 
    ll tot = n * (n + 1) / 2;
 
    ll res = 0;
 
    unordered_map<ll, vector<ll> > mp;
    for (ll i = 0; i < n; i++) {
        mp[a[i]].push_back(i);
    }
    for (auto x : mp) {
         vector<ll> arr = x.second;
 
        arr.push_back(n);
        ll len = arr.size();
         ll ctr = 0;
        ll p = -1;
        for (ll j = 0; j < len; j++) {
            ll ind_diff = arr[j] - p - 1;
 
            ctr += (ind_diff
                             * (ind_diff + 1))
                            / 2;
            p = arr[j];
        }
        res = res + (tot - ctr);
    }
 
    return res;
}

int main()
{
    fast
    ll t;
    cin>>t;
    while(t--){
        ll n; cin>>n;  vector<ll> a(n); ll arr[n];
        for(ll i=0;i<n;i++){
            cin>>a[i]; arr[i]=a[i];
        }
        ll ct1=(Cnt(a));
        ll ct2=(Maxx(arr,n));
        cout<<ct2-ct1 +( (n*(n+1))/2)<<endl;
    }
}
