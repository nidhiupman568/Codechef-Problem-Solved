#include <bits/stdc++.h>
using namespace std;

typedef unsigned int UL;
typedef long long LL;
typedef unsigned long long ULL;
typedef __int128_t i128;
typedef double DB;
typedef long double LD;

const int maxn = 19, maxs = 1 << 18 | 1;
const int mod = (int)1e9 + 7, maxv = (int)1e9 + 1, INF = 0x3f3f3f3f;
const LL INFLL = 0x3f3f3f3f3f3f3f3fLL;
const DB eps = 1e-12, pi = acos((DB)-1);

void solve() {
    int n;
    static int e[maxn];
    static bool f[maxs];
    scanf("%d", &n);
    memset(e, 0, n * sizeof(int));
    memset(f, 0, (1 << n) * sizeof(bool));
    f[0] = 1;
    for(int i = 0; i < n; ++i) {
        static char buf[maxn];
        scanf("%s", buf);
        // buf[i] = '0';
        for(int j = n - 1; j >= 0; --j)
            e[i] = e[i] << 1 | (buf[j] == '1');
        f[1 << i] = 1;
    }
    int ans = 0;
    for(int i = 1; i < (1 << n); ++i) {
        bool bad = 0;
        int cnt = 0;
        for(int j = 0; j < n; ++j) {
            if(!(e[j] & i)) {
                bad |= !((i >> j) & 1);
                continue;
            }
            if((i >> j) & 1) {
                f[i] |= f[i ^ (1 << j)];
            } else {
                ++cnt;
            }
        }
        if(!bad && f[i])
            ans = max(ans, cnt);
    }
    printf("%d\n", n - 1 - ans);
}

int main() {
	int T = 1;
	scanf("%d", &T);
	for(int Case = 1; Case <= T; ++Case) {
		// printf("Case %d: ", Case);
		solve();
	}
	return 0;
}
