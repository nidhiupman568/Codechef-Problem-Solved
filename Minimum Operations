#include<bits/stdc++.h>
#define INT long long
using namespace std;
const int NN = 1e6 + 10;
const int mod = 998244353;
#define mid ((L + R) >> 1)
#define ls (u << 1)
#define rs (ls | 1)
INT pre[NN];
INT val[NN];
INT nxt[NN];
INT A[NN];
int L[NN],R[NN];
int n,k;
struct sum_of_x{
	INT sum[NN], pre[NN];
	void pre_calc(){
		pre[0] = 0;
		for(int i = 1; i <= n; i++) pre[i] = pre[i - 1] + A[i];
		sum[1] = pre[n];
		for(int i = 2; i <= n; i++){
			sum[i] = (sum[i - 1] + pre[n] - pre[i - 1]) % mod;
			sum[i] = (sum[i] - (pre[n] - pre[n - i + 1])) % mod;
			sum[i] += mod;
			sum[i] %= mod;
		}
	}
} xsum;
int main(){
#ifndef ONLINE_JUDGE
	freopen("in.in","r",stdin);
	freopen("out.out","w",stdout);
#endif
	int q;
	cin >> q;
	while(q--){
		scanf("%d %d",&n,&k);
		for(int i = 1; i <= n; i++){
			scanf("%lld",&A[i]);
		}
		for(int i = 1; i <= n; i++) pre[i] = pre[i - 1] + A[i];
		for(int i = 1; i <= n; i++) val[i] = 0;
		for(int i = k; i <= n; i++){
			val[i - k + 1] = pre[i] - pre[i - k];
		}
		INT ans = 0;
		for(int i = 1; i <= n - k + 1; i++){
			int pr = i - 1;
			while(pr >= 1 && val[pr] < val[i]) pr = L[pr] - 1;
			L[i] = pr + 1;
		}
		for(int i = n - k + 1; i >= 1; i--){
			int pr = i + 1;
			while(pr <= n - k + 1 && val[pr] <= val[i]) pr = R[pr] + 1;
			R[i] = pr - 1;
		}
		for(int i = 1; i <= n - k + 1; i++){
			ans = (ans + 1ll * (R[i] - i + 1) * (i - L[i] + 1) % mod * (val[i] % mod) % mod) % mod;
		}
		xsum.pre_calc();
		for(int i = 1; i <= k - 1; i++){
			if(i > n) break;
			ans = (ans + xsum.sum[i] % mod) % mod;
		}
		if(ans < 0) while(1);
		printf("%lld\n",ans);
		
	}
}
