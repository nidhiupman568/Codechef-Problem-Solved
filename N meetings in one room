//Radhe Radhe
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
const ll M = 1000000000+7;
ll Factorial[500000+10];
ll add(ll x, ll y)  { return (x%M + y%M)%M; }
ll sub(ll x, ll y)  { return (x%M - y%M + M)%M;}
ll mul(ll x, ll y)  { return (x%M * y%M)%M; }
void print(vector<ll>v1){
for(auto x:v1){cout<<x<<" ";}
cout<<endl;}
ll binexp(ll a,ll b){
ll res = 1;
while(b){
if(b&1)res = ((res%M)*(a%M)%M);
a = ((a%M)*(a%M)%M);
 b>>=1LL;
}
return res%M;
}
void make_factorial()
{
    Factorial[0]=1;
    for(int i=1;i<500010;i++)
    Factorial[i]=(Factorial[i-1]*i)%M;
}
ll Mod_Inv(ll a)
{
    return binexp(a%M,M-2);
}
int nCr(ll n,ll r)
{
    return (((Factorial[n]*Mod_Inv(Factorial[r]))%M)*Mod_Inv(Factorial[n-r]))%M;
}
void love(bool flag)
{
if (flag)
cout << "YES\n";
else
cout << "NO\n";
}
void Radhe(){
 ll t;
 cin>>t;
 while(t--){
// I don't care about Rating , I like Experience
     ll n;
     cin>>n;
     ll ans = 0;
     ll pre = 0;
     for(int i=1;i<n;i++){
          ll curr = mul(i,i);
          curr = mul(curr,binexp(2,(n-i)));
          curr = add(curr,pre);
          ans  = add(ans,curr);
          pre = curr;
     }
     cout<<ans<<endl;
 }
}
int main(){
Radhe();
return 0;
}
