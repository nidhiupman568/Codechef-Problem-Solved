#include <iostream>
#include <bits/stdc++.h>
using namespace std;


int n,m;
vector<int>adj[200005];
int vis[200005];
int col[200005];
vector<int>temp;
vector<int>answer;


void dfs(int node)
{
	vis[node] = 1;
	temp.push_back(node);
	for(int child : adj[node] )
	{
		if (vis[child]==0 &&  col[child]==1 )
			dfs(child);
	}
	return;
}


int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		long long int numr[n+1];
		long long int denomr[n+1];
		for(int i=1;i<=n;i++) cin>>numr[i];
		for(int i=1;i<=n;i++) cin>>denomr[i];
		for(int i=1;i<=n;i++) col[i]=0,vis[i]=0,adj[i].clear();
		for(int i=1;i<=m;i++)
		{
			int a,b;
			cin>>a>>b;
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		long long int max_nr = numr[1];
		long long int max_dr = denomr[1];
		for(int i=1;i<=n;i++)
		{
			if(max_nr*denomr[i] < max_dr*numr[i])
			{
				max_nr = numr[i];
				max_dr = denomr[i];
			}
		}
		for(int i=1;i<=n;i++)
		{
			if(max_nr*denomr[i] == max_dr*numr[i])
			{
				col[i]=1;
			}
		}
		int mal =0;
		for(int i=1;i<=n;i++)
		{	
			temp.clear();
			if(vis[i]==0 && col[i]==1)
				dfs(i);
			int n = temp.size();
			if(n>mal)
			{
				mal = n;
				answer = temp;
			}
		}
		cout<<mal<<endl;
		for(int i : answer) cout<<i<<" ";
		cout<<endl;
	}
}
