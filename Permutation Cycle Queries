#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
#define multiordered_set tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>
#define lop(i,n) for(ll i=0;i<n;i++)
#define lop1(i,n) for(ll i=1;i<=n;i++)
#define lopr(i,n) for(ll i=n-1;i>=0;i--)
#define vl vector<ll>
#define vvl vector<vector<ll>>
#define ll long long int
#define pb push_back
#define all(v) v.begin(),v.end()
#define IOS  ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define endl '\n'
#define ff first
#define ss second    
#define mem(arr,val) memset(arr,val,sizeof(arr))
#define pii pair<int,int>
#define pll pair<ll,ll>
#define LCM(a,b) (a/__gcd(a,b))*b
#define mii map<int,int>
#define mll map<ll,ll>
#define ub upper_bound
#define lb lower_bound
#define sz(x) (ll)x.size()
#define ld long double
#define pcnt(x) __builtin_popcountll(x)
#define yes cout<<"YES"<<endl
#define no cout<<"NO"<<endl
const long long I1=1e9;
const long long I2=1e18;
const int32_t M1=1e9+7;
const int32_t M2=998244353;
ll binpow(ll a, ll b)
{
  ll res=1;
  while(b>0)
  {
    if(b%2==1) res=res*a;
    a=a*a;
    b=b/2;
  }
  return res;
}
ll binexp(ll a, ll b, ll mod)
{
  ll res=1;
  while(b>0)
  {
    if(b%2==1) res=((res%mod)*(a%mod))%mod;
    a=((a%mod)*(a%mod))%mod;
    b=b/2;
  }
  return res;
}
ll fact(ll n,ll mod)
{
    ll ans=1;
    for(ll i=2;i<=n;i++)
      ans=((ans%mod)*(i%mod)+mod)%mod;
    ans%=mod;
    return ans;
}
ll nCr(ll n,ll r,ll mod)
{
    ll ri=binexp(fact(r,mod),mod-2,mod);
    ll nri=binexp(fact(n-r,mod),mod-2,mod);
    ll ans=(((fact(n,mod)%mod)*(ri%mod))%mod);
    ans=(((ans%mod)*(nri%mod))%mod);
    ans%=mod;
    ans=(ans+mod)%mod;
    return ans;
}

void solve()
{
  ll n,q,m;
  cin>>n>>q>>m;
  
  vl arr(n+1,0),brr(n+1,0);
  lop1(i,n) cin>>arr[i],brr[i]=arr[i];
  
  sort(all(arr));
  
  vl pref(n+1,1),suff(n+2,1);
  lop1(i,n) pref[i]=(pref[i-1]*i)%m;
  suff[n]=n;
  for(ll i=n-1;i>=1;i--) suff[i]=(suff[i+1]*i)%m;
  
  vl prefs(n+1,0),prefsr(n+1,0),prefsl(n+1,0);
  lop1(i,n)
  {
    prefs[i]=prefs[i-1];
    if(i==n) (prefs[i]+=(((pref[i-1]*1)%m)*arr[i])%m)%=m;
    else (prefs[i]+=(((pref[i-1]*suff[i+1])%m)*arr[i])%m)%=m;
    
    prefsr[i]=prefsr[i-1];
    if(i==n || i==n-1) (prefsr[i]+=(((pref[i]*1)%m)*arr[i])%m)%=m;
    else (prefsr[i]+=(((pref[i]*suff[i+2])%m)*arr[i])%m)%=m;

    prefsl[i]=prefsl[i-1];
    if(i==1) (prefsl[i]+=(((1*suff[i])%m)*arr[i])%m)%=m;
    else (prefsl[i]+=(((pref[i-2]*suff[i])%m)*arr[i])%m)%=m;
  }
  while(q--)
  {
    ll j,x;
    cin>>j>>x;
    ll y=brr[j];
    ll ans=0;
    if(x==y) ans=prefs[n];
    else if(x<y)
    {
      ll ind1=lower_bound(all(arr),x)-arr.begin();
      ll ind2=lower_bound(all(arr),y)-arr.begin();
      ans+=prefs[ind1-1];
      (ans+=(prefs[n]-prefs[ind2])%m)%=m;
      (ans+=(prefsr[ind2-1]-prefsr[ind1-1])%m)%=m;
      if(ind1==n) (ans+=(((pref[ind1-1]*1)%m)*x)%m)%=m;
      else (ans+=(((pref[ind1-1]*suff[ind1+1])%m)*x)%m)%=m;
    }
    else
    {
      ll ind1=lower_bound(all(arr),y)-arr.begin();
      ll ind2=lower_bound(all(arr),x)-arr.begin();
      ans+=prefs[ind1-1];
      (ans+=(prefs[n]-prefs[ind2-1])%m)%=m;
      (ans+=(prefsl[ind2-1]-prefsl[ind1])%m)%=m;
      if(ind2==1) (ans+=(((1*suff[ind2])%m)*x)%m)%=m;
      else (ans+=(((pref[ind2-2]*suff[ind2])%m)*x)%m)%=m;
    }
    cout<<(ans+m)%m<<endl;
  }
}

int main()
{
  IOS;
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
  ll t;
  t=1;
  cin>>t;
  while(t--)
  {
    solve();
  }
}
