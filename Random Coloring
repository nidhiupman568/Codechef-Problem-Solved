#include<bits/stdc++.h>
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
// #define int long long
#define ll long long
#define ordered_set tree<long long, null_type,less<long long>, rb_tree_tag,tree_order_statistics_node_update>
#define pb push_back
#define pf push_front
#define F first
#define S second
int p=998244353;
ll fac[5100],invfac[5100];
int n;
int a[5001],d;

ll pw(ll a,ll b){
    ll ans=1,t=a;
    while(b>0){
        if(b%2)ans=(ans*t)%p;
        b/=2;
        t=(t*t)%p;
    }
    return ans;
}

ll inv(ll a){
    return pw(a,p-2);
}

void prepare(){
    fac[0]=1;
    invfac[0]=1;
    for(int i=1;i<5100;i++){
        fac[i]=(i*fac[i-1])%p;
        invfac[i]=inv(fac[i]);
    }
}

inline void mult(int y1){
    int b[n+1];
    for(int i=y1;i<=n;i++)b[i]=(a[i-y1]+a[i])%p;
    for(int i=y1;i<=n;i++)a[i]=b[i];
}

void div(int y1){
    int b[n+1];
    if(y1==0){
        int q=inv(2);
        for(int i=0;i<=n;i++)a[i]=(a[i]*q)%p;
        return;
    }
    for(int i=0;i<y1;i++)b[i]=a[i];
    for(int i=y1;i<=n;i++)b[i]=(a[i]-b[i-y1]+p)%p;
    for(int i=0;i<=n;i++)a[i]=b[i];
}

void multi(int y1,int y2){
    // if(y1>y2)swap(y1,y2);
    d+=max(y1,y2);
    // assert(d<=5000);
    for(int i=d;i>=0;i--){
        a[i]=0;
        if(i>=y1)a[i]=a[i-y1];
        if(i>=y2)a[i]=(a[i]+a[i-y2])%p;
    }
}

void divi(int y1,int y2){
    // assert(d<=5000);
    if(y1>y2)swap(y1,y2);
    if(y1==y2){
        ll q=inv(2);
        for(int i=0;i<=d;i++){
            if(i+y1<=d){
                a[i]=(q*a[i+y1])%p;
            }
            else a[i]=0;
        }
        d-=y1;
        return;
    }
    int y=y2-y1;
    for(int i=0;i<=d;i++){
        int t1=0,t=0;
        if(i>=y)t1=a[i-y];
        if(i+y1<=d)t=a[i+y1];
        a[i]=(t-t1+p)%p;
    }
    d-=y2;
}

void solve(){
    cin>>n;
    d=n;
    int comp[n+1];
    bool col[n+1];
    a[0]=1;
    for(int i=1;i<=n;i++){
        col[i]=0;
        comp[i]=i;
        a[i]=(fac[n]*invfac[i])%p;
        a[i]=(a[i]*invfac[n-i])%p;
    }
    // for(int i=0;i<=n;i++)cout<<a[i]<<' ';cout<<'\n';
    bool bip=1;
    ll ans=1;
    int m;
    cin>>m;
    while(m--){
        // cout<<"hii "<<ans<<'\n';
        int u,v;
        cin>>u>>v;
        if(!bip){
            cout<<"0\n";
            continue;
        }
        if(comp[u]==comp[v]){
            if(col[u]==col[v]){
                bip=0;
                cout<<"0\n";
            }
            else cout<<ans<<'\n';
            continue;
        }
        int y1=0,y2=0,y=0;
        int cu=comp[u],cv=comp[v];
        bool s=(col[u]==col[v]);
        int num=0,nu=0,nv=0;
        if(s){
            for(int i=1;i<=n;i++){
                if(comp[i]==cu){
                    num++;
                    nu++;
                    if(col[i]){
                        y1++;y++;
                    }
                }
                else if(comp[i]==cv){
                    num++;
                    nv++;
                    if(col[i])y2++;
                    else y++;
                    col[i]=1^(col[i]);
                    comp[i]=cu;
                }
            }
        }
        else{
            for(int i=1;i<=n;i++){
                if(comp[i]!=cu&&comp[i]!=cv)continue;
                num++;
                if(comp[i]==cu)nu++;
                else nv++;
                if(col[i])y++;
                if(comp[i]==cu&&col[i])y1++;
                else if(col[i])y2++;
                comp[i]=cu;
            }
        }
        // cout<<m<<' '<<y1<<' '<<y2<<' '<<y<<' '<<num<<'\n';
        // if(m>=3&&n==4)for(int i=0;i<=n;i++)cout<<a[i]<<' ';cout<<'\n';
        divi(y1,nu-y1);
        divi(y2,nv-y2);
        // if(m>=3&&n==4)cout<<m<<' '<<y1<<' '<<y2<<' '<<y<<' '<<num<<' '<<nu<<' '<<nv<<'\n';
        // if(m>=3&&n==4){for(int i=0;i<=n;i++)cout<<a[i]<<' ';cout<<'\n';}
        multi(y,num-y);
        // if(m>=3&&n==4){for(int i=0;i<=n;i++)cout<<a[i]<<' ';cout<<'\n';}
        ans=0;
        for(int i=0;i<=n;i++){
            int ans1=(fac[i]*fac[n-i])%p;
            ans=(ans+(ll)ans1*a[i])%p;
        }
        ans=(ans*invfac[n+1])%p;
        cout<<ans<<'\n';
        // cout<<"moi "<<ans<<'\n';
    }
}


signed main(){
    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    prepare();
    // cout<<(166374059*inv(6))%p<<'\n';
    int tt;cin>>tt;while(tt--)
    solve();
}
