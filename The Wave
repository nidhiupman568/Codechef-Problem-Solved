#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main() {
	// your code goes here
	ll n, q;
	cin>>n>>q;
	vector<ll>roots(n), queries(q);
	unordered_set<ll>us;
	for(ll i=0; i<n; i++){
	    cin>>roots[i];
	    us.insert(roots[i]);
	}
	
	for(ll i=0; i<q; i++) cin>>queries[i];
	
	sort(roots.begin(), roots.end());
	for(ll i=0; i<q; i++){
	   // After the last root polynomial becomes positive 
    	if(queries[i]>roots[n-1]) cout<<"POSITIVE"<<endl;
       // at x = root of the polynomial, it is always zero
    	else if(us.find(queries[i])!=us.end()) cout<<"0"<<endl;
    	else{
            // 	n --> odd
        	if(n&1){
        	    if(queries[i]<roots[0]) cout<<"NEGATIVE"<<endl;
        	    else{
        	        int j = lower_bound(roots.begin(), roots.end(), queries[i])-roots.begin();
        	        if(j&1) cout<<"POSITIVE"<<endl;
        	        else    cout<<"NEGATIVE"<<endl;
        	    }
        	}
        	// 	n --> even
        	else{
        	    if(queries[i]<roots[0]) cout<<"POSITIVE"<<endl;
        	    else{
        	        int j = lower_bound(roots.begin(), roots.end(), queries[i])-roots.begin();
        	        if(j&1) cout<<"NEGATIVE"<<endl;
        	        else    cout<<"POSITIVE"<<endl;
        	    }
        	}
    	}
	}
	return 0;
}
