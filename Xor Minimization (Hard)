#include<bits/stdc++.h>

namespace {

using namespace std;

#define rep(i,n) for(int i = 0; i < (int)(n); i++)
#define rrep(i,n) for(int i = (int)(n) - 1; i >= 0; i--)
#define all(x) begin(x), end(x)
#define rall(x) rbegin(x), rend(x)
template<class T> bool chmax(T& a, const T& b) { if (a < b) { a = b; return true; } else return false; }
template<class T> bool chmin(T& a, const T& b) { if (b < a) { a = b; return true; } else return false; }
using ll = long long;
using P = pair<int,int>;
using VI = vector<int>;
using VVI = vector<VI>;
using VL = vector<ll>;
using VVL = vector<VL>;

} int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int tt;
  cin >> tt;
  while(tt--) {
    int n;
    cin >> n;
    if (n == 2) {
      cout << "2 1" << '\n';
      continue;
    }
    if (n == 3) {
      cout << "3 1 2" << '\n';
      continue;
    }
    n++;
    VI ans(n);
    if (n % 4 != 1) {
      ans[1] = 3;
      ans[2] = 1;
      ans[3] = 2;
      for (int i = 4; i < n; i += 4) {
        int r = min(n, i + 4);
        int v = r;
        for (int j = i; j < r; j++) ans[j] = --v;
        if (r - i == 3) swap(ans[i+1], ans[i+2]);
      }
    } else if (n - 1 == ((n - 1) & -(n - 1))) {
      for (int i = 1; i < n; i++) ans[i] = n - i;
    } else {
      int x = (n - 1) & -(n - 1);
      for (int i = 1; i < x - 1; i++) ans[i] = i ^ x;
      ans[x - 1] = x - 2;
      ans[x] = 2 * x - 1;
      for (int i = x + 1; i < 2 * x - 2; i++) ans[i] = i ^ x;
      ans[2 * x - 2] = x;
      ans[2 * x - 1] = x - 1;
      for (int i = 2 * x; i < n - 1 - x; i++) ans[i] = i ^ x;
      ans[n - 1 - x] = n - 1;
      for (int i = n - x; i < n - 1; i++) ans[i] = i;
      reverse(ans.begin() + n - x, ans.begin() + n - 1);
      swap(ans[n - 1 - x / 2], ans[n - x / 2]);
      ans[n - 1] = n - 1 - x;
    }
    for (int i = 1; i < n; i++) cout << ans[i] << " \n"[i + 1 == n];
  }
}
